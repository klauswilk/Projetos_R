ggplotly(faturamento %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = mes_order_purchase , y = price, stat = "sum"), color= "#0D40D9") +
geom_line() +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = order_purchase_timestamp , y = price, stat = "sum"), color= "#0D40D9") +
geom_line() +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x = order_purchase_timestamp , y = price, stat = "sum"), color= "#0D40D9") +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x = order_purchase_timestamp , y = price, stat = "sum"), color= "#A0B4F2") +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x = order_purchase_timestamp , y = price, stat = "sum"), color= "#2350D9") +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x = order_purchase_timestamp , y = price, stat = "sum"), color= "#040DBF") +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x = order_purchase_timestamp , y = price, stat = "sum"), color= "#040DBF", size = 2) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x = order_purchase_timestamp , y = price, stat = "sum"), color= "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
faturamento <- faturamento %>% mutate(ano_order_purchase = format(order_purchase_timestamp, "%Y"))
faturamento <- faturamento %>% mutate(mes_order_purchase = format(order_purchase_timestamp, "%m"))
faturamento <- faturamento %>% mutate(dia_order_purchase = format(order_purchase_timestamp, "%d"))
faturamento  <- faturamento %>% mutate(hora_order_purchase = hour(order_purchase_timestamp))
faturamento <- inner_join(pagamentos, pedidos)
faturamento <- inner_join(faturamento, vendas)
faturamento <- inner_join(faturamento, consumidores_limpo)
faturamento <- faturamento %>% mutate(ano_order_purchase = format(order_purchase_timestamp, "%Y"))
faturamento <- faturamento %>% mutate(mes_order_purchase = format(order_purchase_timestamp, "%m"))
faturamento <- faturamento %>% mutate(dia_order_purchase = format(order_purchase_timestamp, "%d"))
faturamento  <- faturamento %>% mutate(hora_order_purchase = hour(order_purchase_timestamp))
View(faturamento)
faturamento <- inner_join(pagamentos, pedidos)
faturamento <- inner_join(faturamento, vendas)
faturamento <- inner_join(faturamento, consumidores_limpo)
faturamento_novo <- faturamento %>% mutate(ano_order_purchase = format(order_purchase_timestamp, "%Y"))
faturamento_novo <- faturamento %>% mutate(mes_order_purchase = format(order_purchase_timestamp, "%m"))
faturamento_novo <- faturamento %>% mutate(dia_order_purchase = format(order_purchase_timestamp, "%d"))
faturamento_novo  <- faturamento %>% mutate(hora_order_purchase = hour(order_purchase_timestamp))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x = mes_order , y = price, stat = "sum"), color= "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x =(mes_order_purchase , y = price, stat = "sum"), color= "#040DBF", size = 1) +
faturamento <- inner_join(pagamentos, pedidos)
faturamento <- inner_join(faturamento, vendas)
faturamento <- inner_join(faturamento, consumidores_limpo)
faturamento_novo <- faturamento %>% mutate(ano_order_purchase = format(order_purchase_timestamp, "%Y"))
faturamento_novo <- faturamento %>% mutate(mes_order_purchase = format(order_purchase_timestamp, "%m"))
faturamento_novo <- faturamento %>% mutate(dia_order_purchase = format(order_purchase_timestamp, "%d"))
faturamento_novo  <- faturamento %>% mutate(hora_order_purchase = hour(order_purchase_timestamp))
View(faturamento_novo)
faturamento <- faturamento %>% mutate(ano_order_purchase = format(order_purchase_timestamp, "%Y"))
faturamento <- faturamento %>% mutate(mes_order_purchase = format(order_purchase_timestamp, "%m"))
faturamento <- faturamento %>% mutate(dia_order_purchase = format(order_purchase_timestamp, "%d"))
faturamento <- faturamento %>% mutate(hora_order_purchase = hour(order_purchase_timestamp))
View(faturamento)
ggplotly(faturamento %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x =(mes_order_purchase , y = price, stat = "sum"), color= "#040DBF", size = 1) +
ggplotly(faturamento %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x =(order_puchase_timestamp, y = price, stat = "sum"), colo r= "#040DBF", size = 1) +
ggplotly(faturamento %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x = order_puchase_timestamp, y = price, stat = "sum"), color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
faturamento <- inner_join(pagamentos, pedidos)
faturamento <- inner_join(faturamento, vendas)
faturamento <- inner_join(faturamento, consumidores_limpo)
faturamento_novo <- faturamento %>% mutate(ano_order_purchase = format(order_purchase_timestamp, "%Y"))
faturamento_novo <- faturamento_novo %>% mutate(mes_order_purchase = format(order_purchase_timestamp, "%m"))
faturamento_novo <- faturamento_novo %>% mutate(dia_order_purchase = format(order_purchase_timestamp, "%d"))
faturamento_novo <- faturamento_novo %>% mutate(hora_order_purchase = hour(order_purchase_timestamp))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x = order_puchase_timestamp, y = price, stat = "sum"), color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
library(data.table)
library(ggplot2)
library(plyr)
library(lattice)
library(dplyr)
library(tidyr)
library(readr)
library(DT)
library(kableExtra)
library(SmartEDA)
library(data.table)
library(stringr)
require(lubridate)
library(readxl)
library(plotly)
setwd("D:/Klaus/Projetos_porfolio/R/Olist-Ecommerce")
getwd()
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot() +
geom_line(aes(x = order_puchase_timestamp, y = price, stat = "sum"), color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = order_puchase_timestamp, y = price, stat = "sum")) +
geom_line(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = order_puchase_timestamp, y = price)) +
geom_line(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = order_purchase_timestamp, y = price)) +
geom_line(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
faturamento_3 <- faturamento[!faturamento$payment_type %in% c("credit_card, boleto")]
faturamento_3 <- faturamento[!faturamento$payment_type %in% c("credit_card, boleto"),]
View(faturamento_3)
faturamento_3 <- faturamento[(!faturamento$payment_type %in% c("credit_card, boleto")),]
faturamento_3 <- faturamento[!(faturamento$payment_type %in% c("credit_card, boleto")),]
faturamento_3 <- faturamento[!(faturamento$payment_type %in% c("credit_card, boleto")),]
faturamento_3 <- faturamento[(faturamento$payment_type %in% ! c("credit_card, boleto")),]
faturamento_3 <- faturamento[(!faturamento$payment_type %in% c("credit_card, boleto")),]
View(faturamento_3)
faturamento_3 <- faturamento[!faturamento$payment_type %in% c("credit_card, boleto"),]
faturamento_3 <- faturamento[!faturamento$payment_type == c("credit_card, boleto"),]
faturamento_3 <- faturamento[faturamento$payment_type == c("credit_card, boleto"),]
View(faturamento_3)
faturamento_3 <- faturamento[faturamento$payment_type %in% c("credit_card, boleto"),]
faturamento_3 <- faturamento[!faturamento$payment_type %in% c("credit_card, boleto"),]
faturamento_3 <- faturamento[faturamento$payment_type %in% c("credit_card, boleto"),]
faturamento_3 <- !faturamento[faturamento$payment_type %in% c("credit_card, boleto"),]
library(data.table)
library(ggplot2)
library(plyr)
library(lattice)
library(dplyr)
library(tidyr)
library(readr)
library(DT)
library(kableExtra)
library(SmartEDA)
library(data.table)
library(stringr)
require(lubridate)
library(readxl)
library(plotly)
setwd("D:/Klaus/Projetos_porfolio/R/Olist-Ecommerce")
getwd()
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = mes_order_purchase, y = price)) +
geom_line(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = mes_order_purchase & ano_order_purchase, y = price)) +
geom_line(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = c(mes_order_purchase, ano_order_purchase), y = price)) +
geom_line(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = ano_order_purchase, y = price)) +
geom_line(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = ano_order_purchase, y = price)) +
geom_vline(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = ano_order_purchase, y = price)) +
geom_hline(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = ano_order_purchase, y = price)) +
geom_line(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = ano_order_purchase, y = price)) +
geom_line(color = "#040DBF", size = 1, stat = "sum") +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = ano_order_purchase, y = price)) +
geom_line(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = ano_order_purchase, y = price)) +
geom_line(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
faturamento_novo <- faturamento_novo %>% mutate(total_price = cumsum(price)
faturamento_novo <- faturamento_novo %>% mutate(total_price = cumsum(price))
faturamento_novo <- faturamento_novo %>% mutate(total_price = sum(price))
View(faturamento_novo)
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = ano_order_purchase, y = total_price)) +
geom_line(color = "#040DBF", size = 1) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = ano_order_purchase, y = total_price)) +
geom_line(color = "#040DBF", size = 2) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = order_purchase_timestamp, y = total_price)) +
geom_line(color = "#040DBF", size = 2) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
faturamento_novo <- faturamento_novo %>% mutate(total_price = cumsum(price))
ggplotly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = order_purchase_timestamp, y = total_price)) +
geom_line(color = "#040DBF", size = 2) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
plot_ly(faturamento_novo %>% filter(order_purchase_timestamp >=  "2016-09-01 23:59:59" , order_purchase_timestamp <= "2017-09-30 23:59:59" ) %>%
ggplot(aes(x = order_purchase_timestamp, y = total_price)) +
geom_line(color = "#040DBF", size = 2) +
labs(x = "", y = "",
title = "Total do Faturamento",
subtitle = "Setembro de 2016 a Outubro de 2018"
))
?plot_ly
?merge
faturamento_novo <- faturamento %>% mutate(ano_order_purchase = format(order_purchase_timestamp, "%Y"))
faturamento_novo <- faturamento_novo %>% mutate(mes_order_purchase = format(order_purchase_timestamp, "%m"))
faturamento_novo <- faturamento_novo %>% mutate(dia_order_purchase = format(order_purchase_timestamp, "%d"))
faturamento_novo <- faturamento_novo %>% mutate(hora_order_purchase = hour(order_purchase_timestamp))
library(data.table)
library(ggplot2)
library(plyr)
library(lattice)
library(dplyr)
library(tidyr)
library(readr)
library(DT)
library(kableExtra)
library(SmartEDA)
library(data.table)
library(stringr)
require(lubridate)
library(readxl)
library(plotly)
setwd("D:/Klaus/Projetos_porfolio/R/Olist-Ecommerce")
getwd()
faturamento_novo <- faturamento_novo %>% mutate(order_purchase_timestamp = order_purchase_timestamp) %>% arrange(order_purchase_timestamp)
faturamento_novo <- faturamento_novo %>% mutate(total_price = cumsum(price))
View(faturamento_novo)
faturamento_novo <- faturamento %>% mutate(ano_order_purchase = format(order_purchase_timestamp, "%Y"))
faturamento_novo <- faturamento_novo %>% mutate(mes_order_purchase = format(order_purchase_timestamp, "%m"))
faturamento_novo <- faturamento_novo %>% mutate(dia_order_purchase = format(order_purchase_timestamp, "%d"))
faturamento_novo <- faturamento_novo %>% mutate(hora_order_purchase = hour(order_purchase_timestamp))
faturamento_novo <- faturamento_novo %>% mutate(order_purchase_timestamp = order_purchase_timestamp) %>% arrange(order_purchase_timestamp)
faturamento_novo <- faturamento_novo %>% mutate(total_price = cumsum(price))
faturamento_novo %>% filter (!distinct(product_id) & order_item_id > 1 )
faturamento_novo %>% filter (distinct(product_id) & order_item_id > 1 )
faturamento_novo %>%
distinct(product_id)
filter ( rder_item_id > 1 )
faturamento_novo %>%
distinct(product_id) %>%
filter (order_item_id  1 )
faturamento_novo %>%
distinct(product_id) %>%
filter (order_item_id > 1 )
faturamento_novo %>%
distinct(product_id) %>%
filter (order_item_id > 1 )
faturamento_novo %>%
distinct(product_id) %>%
filter (order_item_id > 1 )
faturamento_novo %>%
filter (order_item_id > 1 )%>%
distinct(product_id)
faturamento_novo %>%
select(product_id, payment_type, price, freight_value, payment_value )
filter (order_item_id > 1 )%>%
distinct(product_id)
faturamento_novo %>%
select(product_id, payment_type, price, freight_value, payment_value )
filter (order_item_id > 1 )%>%
distinct(product_id)
faturamento_novo %>%
select(product_id, payment_type,order_item_id, price, freight_value, payment_value )
filter (order_item_id > 1 )%>%
distinct(product_id)
faturamento_novo %>%
select(product_id, payment_type,order_item_id, price, freight_value, payment_value )
distinct(product_id)
library(data.table)
library(ggplot2)
library(plyr)
library(lattice)
library(dplyr)
library(tidyr)
library(readr)
library(DT)
library(kableExtra)
library(SmartEDA)
library(data.table)
library(stringr)
require(lubridate)
library(readxl)
library(plotly)
setwd("D:/Klaus/Projetos_porfolio/R/Olist-Ecommerce")
getwd()
faturamento_novo %>%
select(product_id, payment_type,order_item_id, price, freight_value, payment_value ) %>%
filter(order_item_id >1)  %>%
distinct(product_id)
faturamento_novo %>%
select(product_id, payment_type,order_item_id, price, freight_value, payment_value ) %>%
filter(order_item_id >1)  %>%
distinct(product_id)
faturamento_novo %>%
select(product_id, payment_type,order_item_id, price, freight_value, payment_value ) %>%
filter(order_item_id >1)  %>%
distinct(product_id)
faturamento <- inner_join(pagamentos, pedidos)
View(faturamento)
faturamento_novo %>%
select(product_id, payment_type,order_item_id, price, freight_value, payment_value ) %>%
filter(order_item_id >1)  %>%
distinct(product_id)
faturamento_novo %>%
select(product_id, payment_type,order_item_id, price, freight_value, payment_value ) %>%
filter(order_item_id > 1)  %>%
distinct(product_id)
faturamento <- inner_join(faturamento, vendas)
faturamento <- inner_join(faturamento, consumidores_limpo)
View(faturamento)
faturamento_novo <- faturamento %>% mutate(ano_order_purchase = format(order_purchase_timestamp, "%Y"))
faturamento_novo <- faturamento_novo %>% mutate(mes_order_purchase = format(order_purchase_timestamp, "%m"))
faturamento_novo <- faturamento_novo %>% mutate(dia_order_purchase = format(order_purchase_timestamp, "%d"))
faturamento_novo <- faturamento_novo %>% mutate(hora_order_purchase = hour(order_purchase_timestamp))
faturamento_novo %>%
select(product_id, payment_type,order_item_id, price, freight_value, payment_value ) %>%
filter(order_item_id > 1)  %>%
distinct(product_id)
faturamento_novo %>%
filter(order_item_id > 1)  %>%
distinct(product_id)
faturamento_novo %>%
distinct(product_id)  %>%
filter(order_item_id > 1)
library(data.table)
library(ggplot2)
library(plyr)
library(lattice)
library(dplyr)
library(tidyr)
library(readr)
library(DT)
library(kableExtra)
library(SmartEDA)
library(data.table)
library(stringr)
require(lubridate)
library(readxl)
library(plotly)
setwd("D:/Klaus/Projetos_porfolio/R/Olist-Ecommerce")
getwd()
faturamento_novo %>%
distinct(product_id)  %>%
filter(order_item_id > 1)
faturamento_novo %>%
distinct(product_id)  %>%
filter(order_item_id > 1)
faturamento_novo %>%
distinct(product_id) %>%
filter(order_item_id > 1)
faturamento_novo %>%
filter(order_item_id > 1)
faturamento_novo %>%
filter(order_item_id > 1)
faturamento_novo %>%
filter(order_item_id > 1 & distinct(product_id) )
faturamento_novo %>%
filter(order_item_id > 1 & product_id = distinct(product_id) )
faturamento_novo[faturamento_novo$order_item_id >1 ,]
library(data.table)
library(ggplot2)
library(plyr)
library(lattice)
library(dplyr)
library(tidyr)
library(readr)
library(DT)
library(kableExtra)
library(SmartEDA)
library(data.table)
library(stringr)
require(lubridate)
library(readxl)
library(plotly)
setwd("D:/Klaus/Projetos_porfolio/R/Olist-Ecommerce")
getwd()
View(pagamentos)
View(vendas)
View(consumidores_limpo)
library(data.table)
library(ggplot2)
library(plyr)
library(lattice)
library(dplyr)
library(tidyr)
library(readr)
library(DT)
library(kableExtra)
library(SmartEDA)
library(data.table)
library(stringr)
require(lubridate)
library(readxl)
library(plotly)
setwd("D:/Klaus/Projetos_porfolio/R/Olist-Ecommerce")
getwd()
table(duplicated(vendas))
table(duplicated(vendas$product_id))
table(duplicated(vendas$product_id, vendas$order_id))
